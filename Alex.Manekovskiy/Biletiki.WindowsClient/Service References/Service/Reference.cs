//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Biletiki.WindowsClient.Service {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AfficheRequestParameters", Namespace="http://itstep.org/BiletikiService/V1")]
    [System.SerializableAttribute()]
    public partial class AfficheRequestParameters : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Biletiki.WindowsClient.Service.PagingInfo PagingInfoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Biletiki.WindowsClient.Service.PagingInfo PagingInfo {
            get {
                return this.PagingInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.PagingInfoField, value) != true)) {
                    this.PagingInfoField = value;
                    this.RaisePropertyChanged("PagingInfo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PagingInfo", Namespace="http://schemas.datacontract.org/2004/07/Biletiki.Contracts")]
    [System.SerializableAttribute()]
    public partial class PagingInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageSizeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageNumber {
            get {
                return this.PageNumberField;
            }
            set {
                if ((this.PageNumberField.Equals(value) != true)) {
                    this.PageNumberField = value;
                    this.RaisePropertyChanged("PageNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageSize {
            get {
                return this.PageSizeField;
            }
            set {
                if ((this.PageSizeField.Equals(value) != true)) {
                    this.PageSizeField = value;
                    this.RaisePropertyChanged("PageSize");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Affiche", Namespace="http://itstep.org/BiletikiService/V1")]
    [System.SerializableAttribute()]
    public partial class Affiche : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.ReadOnlyCollection<Biletiki.WindowsClient.Service.Movie> MoviesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PagesCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ReadOnlyCollection<Biletiki.WindowsClient.Service.Movie> Movies {
            get {
                return this.MoviesField;
            }
            set {
                if ((object.ReferenceEquals(this.MoviesField, value) != true)) {
                    this.MoviesField = value;
                    this.RaisePropertyChanged("Movies");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PagesCount {
            get {
                return this.PagesCountField;
            }
            set {
                if ((this.PagesCountField.Equals(value) != true)) {
                    this.PagesCountField = value;
                    this.RaisePropertyChanged("PagesCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Movie", Namespace="http://schemas.datacontract.org/2004/07/Biletiki.Contracts")]
    [System.SerializableAttribute()]
    public partial class Movie : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.ReadOnlyCollection<string> DirectorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DurationInMinutesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.ReadOnlyCollection<string> GenresField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<float> IMDBRatingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ShowingFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ShowingToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.ReadOnlyCollection<string> StarsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.ReadOnlyCollection<string> WritersField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ReadOnlyCollection<string> Directors {
            get {
                return this.DirectorsField;
            }
            set {
                if ((object.ReferenceEquals(this.DirectorsField, value) != true)) {
                    this.DirectorsField = value;
                    this.RaisePropertyChanged("Directors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DurationInMinutes {
            get {
                return this.DurationInMinutesField;
            }
            set {
                if ((this.DurationInMinutesField.Equals(value) != true)) {
                    this.DurationInMinutesField = value;
                    this.RaisePropertyChanged("DurationInMinutes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ReadOnlyCollection<string> Genres {
            get {
                return this.GenresField;
            }
            set {
                if ((object.ReferenceEquals(this.GenresField, value) != true)) {
                    this.GenresField = value;
                    this.RaisePropertyChanged("Genres");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<float> IMDBRating {
            get {
                return this.IMDBRatingField;
            }
            set {
                if ((this.IMDBRatingField.Equals(value) != true)) {
                    this.IMDBRatingField = value;
                    this.RaisePropertyChanged("IMDBRating");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ShowingFrom {
            get {
                return this.ShowingFromField;
            }
            set {
                if ((this.ShowingFromField.Equals(value) != true)) {
                    this.ShowingFromField = value;
                    this.RaisePropertyChanged("ShowingFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ShowingTo {
            get {
                return this.ShowingToField;
            }
            set {
                if ((this.ShowingToField.Equals(value) != true)) {
                    this.ShowingToField = value;
                    this.RaisePropertyChanged("ShowingTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ReadOnlyCollection<string> Stars {
            get {
                return this.StarsField;
            }
            set {
                if ((object.ReferenceEquals(this.StarsField, value) != true)) {
                    this.StarsField = value;
                    this.RaisePropertyChanged("Stars");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ReadOnlyCollection<string> Writers {
            get {
                return this.WritersField;
            }
            set {
                if ((object.ReferenceEquals(this.WritersField, value) != true)) {
                    this.WritersField = value;
                    this.RaisePropertyChanged("Writers");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://itstep.org/BiletikiService/V1", ConfigurationName="Service.IBiletikiService")]
    public interface IBiletikiService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://itstep.org/BiletikiService/V1/IBiletikiService/GetAffiche", ReplyAction="http://itstep.org/BiletikiService/V1/IBiletikiService/GetAfficheResponse")]
        Biletiki.WindowsClient.Service.Affiche GetAffiche(Biletiki.WindowsClient.Service.AfficheRequestParameters parameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://itstep.org/BiletikiService/V1/IBiletikiService/GetAffiche", ReplyAction="http://itstep.org/BiletikiService/V1/IBiletikiService/GetAfficheResponse")]
        System.Threading.Tasks.Task<Biletiki.WindowsClient.Service.Affiche> GetAfficheAsync(Biletiki.WindowsClient.Service.AfficheRequestParameters parameters);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBiletikiServiceChannel : Biletiki.WindowsClient.Service.IBiletikiService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BiletikiServiceClient : System.ServiceModel.ClientBase<Biletiki.WindowsClient.Service.IBiletikiService>, Biletiki.WindowsClient.Service.IBiletikiService {
        
        public BiletikiServiceClient() {
        }
        
        public BiletikiServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BiletikiServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BiletikiServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BiletikiServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Biletiki.WindowsClient.Service.Affiche GetAffiche(Biletiki.WindowsClient.Service.AfficheRequestParameters parameters) {
            return base.Channel.GetAffiche(parameters);
        }
        
        public System.Threading.Tasks.Task<Biletiki.WindowsClient.Service.Affiche> GetAfficheAsync(Biletiki.WindowsClient.Service.AfficheRequestParameters parameters) {
            return base.Channel.GetAfficheAsync(parameters);
        }
    }
}
